{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Development\\\\my-app\\\\src\\\\Components\\\\TodoElement.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoElement extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getStyle = () => {\n      return {\n        backgroundColor: '#f4f4f4',\n        padding: 2,\n        boderBottom: '1px #ccc dotted',\n        textDecoration: this.props.todo.completed ? 'line-through' : 'none'\n      };\n    };\n  }\n\n  // taskComplete(e){\n  //     console.log(this.props) \n  // }\n  // taskComplete = (e) => {\n  //      // As we are not using state managers, to change a value of parent state we have to climb the lader\n  // }\n  render() {\n    const {\n      id,\n      title\n    } = this.props.todo;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: this.getStyle(),\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onChange: this.props.taskComplete.bind(this, id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), \" \", ' ', title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nTodoElement.propTypes = {\n  todo: PropTypes.object.isRequired\n}; // const itemStyle = {\n//     backgroundColor: '#f4f4f4',\n//     padding: 2\n// }\n\nexport default TodoElement;","map":{"version":3,"sources":["D:/React Development/my-app/src/Components/TodoElement.js"],"names":["React","Component","PropTypes","TodoElement","getStyle","backgroundColor","padding","boderBottom","textDecoration","props","todo","completed","render","id","title","taskComplete","bind","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AACA,MAAMC,WAAN,SAA0BF,SAA1B,CAAmC;AAAA;AAAA;;AAAA,SAa/BG,QAb+B,GAapB,MAAM;AACb,aACI;AACIC,QAAAA,eAAe,EAAE,SADrB;AAEIC,QAAAA,OAAO,EAAE,CAFb;AAGIC,QAAAA,WAAW,EAAE,iBAHjB;AAIIC,QAAAA,cAAc,EAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,SAAhB,GAChB,cADgB,GACC;AALrB,OADJ;AASH,KAvB8B;AAAA;;AAwB/B;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA,EAAD;AAAIC,MAAAA;AAAJ,QAAa,KAAKL,KAAL,CAAWC,IAA9B;AACA,wBACG;AAAK,MAAA,KAAK,EAAE,KAAKN,QAAL,EAAZ;AAAA,6BACK;AAAA,gCAEI;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,QAAQ,EAAI,KAAKK,KAAL,CAAWM,YAAX,CAAwBC,IAAxB,CAA6B,IAA7B,EAAkCH,EAAlC;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAFJ,OAEiF,GAFjF,EAGKC,KAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,YADH;AAUH;;AA1C8B;;AA6CnCX,WAAW,CAACc,SAAZ,GAAwB;AACpBP,EAAAA,IAAI,EAAGR,SAAS,CAACgB,MAAV,CAAiBC;AADJ,CAAxB,C,CAIA;AACA;AACA;AACA;;AACA,eAAehB,WAAf","sourcesContent":["import React, {Component} from 'react'; \r\nimport PropTypes from 'prop-types';\r\nclass TodoElement extends Component{\r\n    // getStyle(){\r\n    //     if(this.props.todo.completed){\r\n    //         return{\r\n    //             textDecoration: 'line-through'\r\n    //         }\r\n    //     }else{\r\n    //         return{\r\n    //             textDecoration: 'none'\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    getStyle = () => {\r\n        return(\r\n            {\r\n                backgroundColor: '#f4f4f4',\r\n                padding: 2,\r\n                boderBottom: '1px #ccc dotted',\r\n                textDecoration: this.props.todo.completed ? \r\n                'line-through' : 'none'\r\n            }\r\n        )\r\n    }\r\n    // taskComplete(e){\r\n    //     console.log(this.props) \r\n    // }\r\n    // taskComplete = (e) => {\r\n    //      // As we are not using state managers, to change a value of parent state we have to climb the lader\r\n    // }\r\n    render(){\r\n        const {id,title} = this.props.todo\r\n        return(\r\n           <div style={this.getStyle()}>\r\n                <p>\r\n                    {/* <input type=\"checkbox\" onChange = {this.taskComplete.bind(this)}/> {' '} */} \r\n                    <input type=\"checkbox\" onChange = {this.props.taskComplete.bind(this,id)}/> {' '}\r\n                    {title}\r\n                </p>\r\n           </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nTodoElement.propTypes = {\r\n    todo : PropTypes.object.isRequired\r\n}\r\n\r\n// const itemStyle = {\r\n//     backgroundColor: '#f4f4f4',\r\n//     padding: 2\r\n// }\r\nexport default TodoElement"]},"metadata":{},"sourceType":"module"}